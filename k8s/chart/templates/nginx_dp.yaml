---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: init-cast
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of cast deployment"; while ! nc -z cast.default.svc.cluster.local 80; do sleep 1; printf "-"; done; echo -e "  >> cast service has started";'] 
        - name: init-movie
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of movie deployment"; while ! nc -z movie.default.svc.cluster.local 80; do sleep 1; printf "-"; done; echo -e "  >> movie service has started";'] 
      containers:
        - name: nginx
          image: nginx
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: nginx-conf
            # - mountPath: /var/log/nginx
            #   name: log
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        # - name: log
        #   emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: default
data:
  nginx.conf: |
    server {
      listen 80;

      location /api/v1/movies {
        proxy_pass http://movie.default.svc.cluster.local:80/api/v1/movies;
      }

      location /api/v1/casts {
        proxy_pass http://cast.default.svc.cluster.local:80/api/v1/casts;
      }

    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
  namespace: default
spec:
  type: NodePort
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30300
---
