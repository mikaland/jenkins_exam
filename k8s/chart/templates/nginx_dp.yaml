---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      initContainers:
        - name: init-cast
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of cast deployment"; while ! nc -z cast.default.svc.cluster.local {{ .Values.cast.service.port }}; do sleep 1; printf "-"; done; echo -e "  >> cast service has started";'] 
        - name: init-movie
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of movie deployment"; while ! nc -z movie.default.svc.cluster.local {{ .Values.movie.service.port }}; do sleep 1; printf "-"; done; echo -e "  >> movie service has started";'] 
      containers:
        - name: nginx
          image: "{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}"
          imagePullPolicy: {{ .Values.nginx.image.pullPolicy }}
          resources:
            {{- toYaml .Values.nginx.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.nginx.service.port }}
          volumeMounts:
            - mountPath: /etc/nginx/conf.d
              readOnly: true
              name: nginx-conf
            # - mountPath: /var/log/nginx
            #   name: log
      volumes:
        - name: nginx-conf
          configMap:
            name: nginx-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        # - name: log
        #   emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    server {
      listen {{ .Values.nginx.service.port }};

      location /api/v1/movies {
        proxy_pass http://movie.default.svc.cluster.local:{{ .Values.nginx.service.targetPort }}/api/v1/movies;
      }

      location /api/v1/casts {
        proxy_pass http://cast.default.svc.cluster.local:{{ .Values.nginx.service.targetPort }}/api/v1/casts;
      }

    }
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-svc
spec:
  type: {{ .Values.nginx.service.type }}
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: {{ .Values.nginx.service.port }}
      targetPort: {{ .Values.nginx.service.targetPort }}
      nodePort: {{ .Values.nginx.service.nodePort }}
---
