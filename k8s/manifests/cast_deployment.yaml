apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast
spec:
  selector:
    matchLabels:
      app: cast
  template:
    metadata:
      labels:
        app: cast
    spec:
      # initContainers:
      #   - name: init-db
      #     image: busybox:1.31
      #     command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z cast-db 5432; do sleep 1; printf "-"; done; echo -e "  >> MySQL DB Server has started";']   
      containers:
      - name: cast
        image: mikalander77/jenkins_exam_cast:jenkins_devops_exams-cast_service
        command: ["uvicorn", "app.main:app", "--reload",  "--host", "0.0.0.0", "--port", "8000"]
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 8000
        env:
          - name: POSTGRES_DB
            valueFrom:
              configMapKeyRef:
                name: cast-db-configmap
                key: postgres-dbname
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: cast-db-secret
                key: postgres-root-username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: cast-db-secret
                key: postgres-root-password
          - name: DATABASE_URI
            value: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@cast-db/${POSTGRES_DB}"
---
apiVersion: v1
kind: Service
metadata:
  name: cast
spec:
  type: ClusterIP
  selector:
    app: cast
  ports:
  - port: 8002
    targetPort: 8000
